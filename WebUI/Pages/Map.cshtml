@page
@model WebUI.Pages.MapModel

@{
    ViewData["Title"] = "Map";
}

@section Scripts{
    <script>
        var map;
        var ajaxRequest= new XMLHttpRequest();
        var plotlist;
        var plotlayers = [];

        function initmap() {
            // set up the map
            map = new L.Map('map');

            // create the tile layer with correct attribution
            var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
            var osmAttrib = 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors';
            var osm = new L.TileLayer(osmUrl, { minZoom: 6, attribution: osmAttrib });

            // Initial view on the Alps
            map.setView(new L.LatLng(46.90, 9.83), 7);
            map.addLayer(osm);

            // Initial load of huts to plot
            askForPlots();
            // Create event handler on map moved
            map.on('moveend', onMapMove);
        }

        function onMapMove(e) { askForPlots(); }

        function askForPlots() {
            // request the huts info with AJAX for the current bounds
            var bounds = map.getBounds();
            var minll = bounds.getSouthWest();
            var maxll = bounds.getNorthEast();
            var url = 'api/Map?llLon=' + minll.lng + '&llLat=' + minll.lat + '&urLon=' + maxll.lng + '&urLat=' + maxll.lat;
            url = url.concat("&dateFilter=" + document.getElementById('DateFilter').value);

            ajaxRequest.onreadystatechange = mapRequestHandler;
            ajaxRequest.open('GET', url, true);
            ajaxRequest.send(null);
        }

        function mapRequestHandler() {
            // if AJAX returned a list of markers, add them to the map
            if (ajaxRequest.readyState == 4) {
                //use the info here that was returned
                if (ajaxRequest.status == 200) {
                    plotlist = eval("(" + ajaxRequest.responseText + ")");
                    removeMarkers();
                    for (i = 0; i < plotlist.length; i++) {
                        var plotll = new L.LatLng(plotlist[i].latitude, plotlist[i].longitude, true);
                        var plotmark = new L.Marker(plotll);
                        plotmark.data = plotlist[i];
                        map.addLayer(plotmark);

                        var toolTip = "<b>" + plotlist[i].name + "</b>";
                        if (plotlist[i].freeBeds != null)
                        {
                            toolTip = toolTip.concat("<br />Freie Plätze: " + plotlist[i].freeBeds);
                        }

                        plotmark.bindTooltip(toolTip);

                        var popupHtml = "<h6>" + plotlist[i].name + "</h6>";
                        if (plotlist[i].enabled == true) {
                            if (plotlist[i].freeBeds != null)
                            {
                                popupHtml = popupHtml.concat("Freie Plätze: " + plotlist[i].freeBeds);
                            }
                            popupHtml = popupHtml.concat("<br /><a target=\"_blank\" href=\"HutAvailability/" + plotlist[i].id + "\">Verfügbarkeitsübersicht</a>");                         
                            popupHtml = popupHtml.concat("<br /><a target=\"_blank\" href=\"" + plotlist[i].link + "\">Onlinebuchung</a>");
                        }
                        else
                        {
                            popupHtml = popupHtml.concat("<br />[Buchung inaktiv]");
                        }
                        plotmark.bindPopup(popupHtml);
                        plotlayers.push(plotmark);
                    }
                }
            }
        }

        // Function to clear all markers
        function removeMarkers() {
            for (i = 0; i < plotlayers.length; i++) {
                map.removeLayer(plotlayers[i]);
            }
            plotlayers = [];
        }

        // On change of the date field, reload the map
        $("#dateForm")
            .on("input", function () {
                askForPlots();
            });

        $(document).ready(function () {
            initmap();
        })

/**/</script>
}

<h1>Map</h1>
<div class="form-group">
    <div class="col-md-3">
        <form id="dateForm">
            <div>
                <label asp-for="DateFilter">Verfügbarkeit an Datum</label>
                <input asp-for="DateFilter" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
            </div>
            <div>
                <button class="btn btn-primary" onclick="document.getElementById('DateFilter').value = ''">Reset</button>
            </div>
        </form>
    </div>
</div>
<div id="map" class="map"></div>
