@page
@model WebUI.Pages.MapModel

@{
    ViewData["Title"] = "Map";
}

@section Scripts{
    <script>
        var map;
        var ajaxRequest;
        var plotlist;
        var plotlayers = [];

        function initmap() {
            // set up the map
            map = new L.Map('map');

            // create the tile layer with correct attribution
            var osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
            var osmAttrib = 'Map data © <a href="https://openstreetmap.org">OpenStreetMap</a> contributors';
            var osm = new L.TileLayer(osmUrl, { minZoom: 6, attribution: osmAttrib });

            map.setView(new L.LatLng(46.90, 9.83), 7);
            map.addLayer(osm);

            askForPlots();
            map.on('moveend', onMapMove);
        }

        // then add this as a new function...
        function onMapMove(e) { askForPlots(); }

        ajaxRequest = new XMLHttpRequest();

        function askForPlots() {
            // request the marker info with AJAX for the current bounds
            var bounds = map.getBounds();
            var minll = bounds.getSouthWest();
            var maxll = bounds.getNorthEast();
            var url = 'api/Map?llLon=' + minll.lng + '&llLat=' + minll.lat + '&urLon=' + maxll.lng + '&urLat=' + maxll.lat;
            @if (Model.DateFilter != null && Model.DateFilter >= DateTime.Today)
            {
               @: url = url.concat("&dateFilter=@Model.DateFilter?.ToString("yyyy-MM-dd")");
            }

            ajaxRequest.onreadystatechange = stateChanged;
            ajaxRequest.open('GET', url, true);
            ajaxRequest.send(null);
        }

        function stateChanged() {
            // if AJAX returned a list of markers, add them to the map
            if (ajaxRequest.readyState == 4) {
                //use the info here that was returned
                if (ajaxRequest.status == 200) {
                    plotlist = eval("(" + ajaxRequest.responseText + ")");
                    removeMarkers();
                    for (i = 0; i < plotlist.length; i++) {
                        var plotll = new L.LatLng(plotlist[i].latitude, plotlist[i].longitude, true);
                        var plotmark = new L.Marker(plotll);
                        plotmark.data = plotlist[i];
                        map.addLayer(plotmark);
                        plotmark.bindPopup("<h5>" + plotlist[i].name + "</h5>" + plotlist[i].details);
                        plotlayers.push(plotmark);
                    }
                }
            }
        }

        function removeMarkers() {
            for (i = 0; i < plotlayers.length; i++) {
                map.removeLayer(plotlayers[i]);
            }
            plotlayers = [];
        }

        $(document).ready(function () {
            initmap();
        })
    </script>
}

<h1>Map</h1>
<div class="form-group">
    <div class="col-md-3">
        <form asp-action="Map" method="get">
            <div>
                <label asp-for="DateFilter">Verfügbarkeit an Datum</label>
                <input asp-for="DateFilter" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
            </div>
            <div>
                <input type="submit" class="btn btn-primary" value="Abschicken" />
                <a asp-route-Huts="" asp-route-SearchString="" class="btn btn-primary">Reset</a>
            </div>
        </form>
    </div>
</div>
<div id="map" class="map"></div>
